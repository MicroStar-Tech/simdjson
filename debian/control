Source: simdjson
Section: libs
Homepage: https://github.com/lemire/simdjson
Priority: optional
Standards-Version: 4.4.0
Vcs-Browser: https://salsa.debian.org/debian/simdjson
Vcs-Git: https://salsa.debian.org/debian/simdjson.git
Maintainer: Mo Zhou <cdluminate@gmail.com>
Build-Depends: debhelper-compat (= 11), cmake,

Package: libsimdjson0
Architecture: any-amd64 arm64
Depends: ${misc:Depends}, ${shlibs:Depends},
Description: Parsing gigabytes of JSON per second (shared object)
 JSON documents are everywhere on the Internet. Servers spend a lot of time
 parsing these documents. simdjson aims to accelerate the parsing of JSON per
 se using commonly available SIMD instructions as much as possible while doing
 full validation (including character encoding).
 .
 It requires a processor with:
  - AVX2 (i.e., Intel processors starting with the Haswell microarchitecture
    released 2013 and AMD processors starting with the Zen microarchitecture
    released 2017)
  - or SSE 4.2 and CLMUL (i.e., Intel processors going back to Westmere
    released in 2010 or AMD processors starting with the Jaguar used in the
    PS4 and XBox One)
  - or a 64-bit ARM processor (ARMv8-A): this covers a wide range of mobile
    processors, including all Apple processors currently available for sale,
    going back as far back as the iPhone 5s (2013).
 .
 This package ships the shared object.

Package: libsimdjson-dev
Section: libdevel
Architecture: any-amd64 arm64
Depends: ${misc:Depends}, libsimdjson0 (= ${binary:Version}),
Description: Parsing gigabytes of JSON per second (development)
 JSON documents are everywhere on the Internet. Servers spend a lot of time
 parsing these documents. simdjson aims to accelerate the parsing of JSON per
 se using commonly available SIMD instructions as much as possible while doing
 full validation (including character encoding).
 .
 It requires a processor with:
  - AVX2 (i.e., Intel processors starting with the Haswell microarchitecture
    released 2013 and AMD processors starting with the Zen microarchitecture
    released 2017)
  - or SSE 4.2 and CLMUL (i.e., Intel processors going back to Westmere
    released in 2010 or AMD processors starting with the Jaguar used in the
    PS4 and XBox One)
  - or a 64-bit ARM processor (ARMv8-A): this covers a wide range of mobile
    processors, including all Apple processors currently available for sale,
    going back as far back as the iPhone 5s (2013).
 .
 This package ships development files.
